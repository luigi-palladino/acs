function ddq = fwdDyn(q, dq, tau)
%myRobot.setValues(myRobot.fwdDyn) 
%load costant
q1=q(1); q2=q(2); dq1 = dq(1); dq2=dq(2);
tau1 = tau(1);tau2 = tau(2);tau3 = tau(3);
Value;

ddq = [
(36*m2*ra2^2*tau1 - 36*m2*ra2^2*tau2 + 2*m3*s3^2*tau1 - 2*m3*s3^2*tau2 + 24*L2^2*m2*tau1 - 24*L2^2*m2*tau2 + 24*L2^2*m3*tau1 - 24*L2^2*m3*tau2 + 2*L3^2*m3*tau1 - 2*L3^2*m3*tau2 - 12*L1*L2*m2*tau2*cos(q2) - 24*L1*L2*m3*tau2*cos(q2) + 12*L1*L2^3*dq2^2*m2^2*sin(q2) + 24*L1*L2^3*dq2^2*m3^2*sin(q2) + 2*L1*L2*L3^2*dq2^2*m3^2*sin(q2) + 18*L1*L2*dq2^2*m2^2*ra2^2*sin(q2) + 2*L1*L2*dq2^2*m3^2*s3^2*sin(q2) + 24*L1*L2^3*dq1*dq2*m2^2*sin(q2) + 48*L1*L2^3*dq1*dq2*m3^2*sin(q2) + 36*L1*L2^3*dq2^2*m2*m3*sin(q2) + 4*L1*L2*L3^2*dq1*dq2*m3^2*sin(q2) + L1*L2*L3^2*dq2^2*m2*m3*sin(q2) + 36*L1*L2*dq1*dq2*m2^2*ra2^2*sin(q2) + 4*L1*L2*dq1*dq2*m3^2*s3^2*sin(q2) + 36*L1*L2*dq2^2*m2*m3*ra2^2*sin(q2) + L1*L2*dq2^2*m2*m3*s3^2*sin(q2) + 72*L1*L2^3*dq1*dq2*m2*m3*sin(q2) + 2*L1*L2*L3^2*dq1*dq2*m2*m3*sin(q2) + 72*L1*L2*dq1*dq2*m2*m3*ra2^2*sin(q2) + 2*L1*L2*dq1*dq2*m2*m3*s3^2*sin(q2))/(24*L1^2*L2^2*m2^2 + 24*L1^2*L2^2*m3^2 + 2*L1^2*L3^2*m3^2 + 36*L1^2*m2^2*ra2^2 + 2*L1^2*m3^2*s3^2 + 24*L1^2*L2^2*m1*m2 + 24*L1^2*L2^2*m1*m3 + 48*L1^2*L2^2*m2*m3 + 2*L1^2*L3^2*m1*m3 + 2*L1^2*L3^2*m2*m3 - 6*L1^2*L2^2*m2^2*cos(q2)^2 - 24*L1^2*L2^2*m3^2*cos(q2)^2 + 36*L1^2*m1*m2*ra2^2 + 36*L2^2*m1*m2*ra1^2 + 36*L2^2*m1*m3*ra1^2 + 36*L1^2*m2*m3*ra2^2 + 3*L3^2*m1*m3*ra1^2 + 2*L1^2*m1*m3*s3^2 + 2*L1^2*m2*m3*s3^2 + 54*m1*m2*ra1^2*ra2^2 + 3*m1*m3*ra1^2*s3^2 - 24*L1^2*L2^2*m2*m3*cos(q2)^2);
-(36*m2*ra2^2*tau1 - 36*m1*ra1^2*tau2 - 36*m2*ra2^2*tau2 + 2*m3*s3^2*tau1 - 2*m3*s3^2*tau2 - 24*L1^2*m1*tau2 - 24*L1^2*m2*tau2 + 24*L2^2*m2*tau1 - 24*L1^2*m3*tau2 - 24*L2^2*m2*tau2 + 24*L2^2*m3*tau1 - 24*L2^2*m3*tau2 + 2*L3^2*m3*tau1 - 2*L3^2*m3*tau2 + 3*L1^2*L2^2*dq2^2*m2^2*sin(2*q2) + 12*L1^2*L2^2*dq2^2*m3^2*sin(2*q2) + 12*L1*L2*m2*tau1*cos(q2) - 24*L1*L2*m2*tau2*cos(q2) + 24*L1*L2*m3*tau1*cos(q2) - 48*L1*L2*m3*tau2*cos(q2) + 12*L1*L2^3*dq2^2*m2^2*sin(q2) + 24*L1*L2^3*dq2^2*m3^2*sin(q2) + 2*L1*L2*L3^2*dq2^2*m3^2*sin(q2) + 18*L1*L2*dq2^2*m2^2*ra2^2*sin(q2) + 2*L1*L2*dq2^2*m3^2*s3^2*sin(q2) + 6*L1^2*L2^2*dq1*dq2*m2^2*sin(2*q2) + 24*L1^2*L2^2*dq1*dq2*m3^2*sin(2*q2) + 12*L1^2*L2^2*dq2^2*m2*m3*sin(2*q2) + 24*L1*L2^3*dq1*dq2*m2^2*sin(q2) + 48*L1*L2^3*dq1*dq2*m3^2*sin(q2) + 36*L1*L2^3*dq2^2*m2*m3*sin(q2) + 4*L1*L2*L3^2*dq1*dq2*m3^2*sin(q2) + L1*L2*L3^2*dq2^2*m2*m3*sin(q2) + 36*L1*L2*dq1*dq2*m2^2*ra2^2*sin(q2) + 4*L1*L2*dq1*dq2*m3^2*s3^2*sin(q2) + 36*L1*L2*dq2^2*m2*m3*ra2^2*sin(q2) + L1*L2*dq2^2*m2*m3*s3^2*sin(q2) + 24*L1^2*L2^2*dq1*dq2*m2*m3*sin(2*q2) + 72*L1*L2^3*dq1*dq2*m2*m3*sin(q2) + 2*L1*L2*L3^2*dq1*dq2*m2*m3*sin(q2) + 72*L1*L2*dq1*dq2*m2*m3*ra2^2*sin(q2) + 2*L1*L2*dq1*dq2*m2*m3*s3^2*sin(q2))/(21*L1^2*L2^2*m2^2 + 12*L1^2*L2^2*m3^2 + 2*L1^2*L3^2*m3^2 + 36*L1^2*m2^2*ra2^2 + 2*L1^2*m3^2*s3^2 + 24*L1^2*L2^2*m1*m2 + 24*L1^2*L2^2*m1*m3 + 36*L1^2*L2^2*m2*m3 + 2*L1^2*L3^2*m1*m3 + 2*L1^2*L3^2*m2*m3 - 3*L1^2*L2^2*m2^2*cos(2*q2) - 12*L1^2*L2^2*m3^2*cos(2*q2) + 36*L1^2*m1*m2*ra2^2 + 36*L2^2*m1*m2*ra1^2 + 36*L2^2*m1*m3*ra1^2 + 36*L1^2*m2*m3*ra2^2 + 3*L3^2*m1*m3*ra1^2 + 2*L1^2*m1*m3*s3^2 + 2*L1^2*m2*m3*s3^2 + 54*m1*m2*ra1^2*ra2^2 + 3*m1*m3*ra1^2*s3^2 - 12*L1^2*L2^2*m2*m3*cos(2*q2));
(tau3 + g*m3)/m3;
];
end